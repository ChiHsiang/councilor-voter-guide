!function(){"use strict";function t(){var t=void 0;return document.body.clientHeight&&(t=1*document.body.clientHeight),document.documentElement.clientHeight&&(t=1*document.documentElement.clientHeight),window.innerHeight&&(t=1*window.innerHeight),t}function e(){var t=void 0;return document.body.clientWidth&&(t=1*document.body.clientWidth),document.documentElement.clientWidth&&(t=1*document.documentElement.clientWidth),window.innerWidth&&(t=1*window.innerWidth),t}function n(){if(arguments.length>0&&void 0!==arguments[0]&&!arguments[0]){var t=[document.getElementById("pop-about"),document.getElementById("partmb")];for(var e in t)t[e].removeEventListener("touchmove",!1)}else if(device.mobile()){var t=[document.getElementById("pop-about"),document.getElementById("partmb")];for(var e in t)t[e].addEventListener("touchmove",function(t){t.preventDefault()},!1)}}function i(t,e){function n(t){c="ready",device.mobile()||device.tablet()}function i(n){"1"==n.data&&(console.log("vdo:"+n.data),S.ga.GT("/video."+t,".btn.play-"+e))}function o(){r.stopVideo()}var a=document.createElement("script"),c="init";a.src="https://www.youtube.com/iframe_api";var s=document.getElementsByTagName("script")[0];s.parentNode.insertBefore(a,s);var r;this.get_state=function(){return c},this.onYouTubeIframeAPIReady=function(){r=new YT.Player(e,{height:"100%",width:"100%",videoId:t,playerVars:{autoplay:0,rel:0,showinfo:0},events:{onReady:n,onStateChange:i}})},this.stop=function(){o()},this.play=function(){r.playVideo()},this.loadvdo=function(t){r.loadVideoById(t),r.stopVideo()}}function o(){function t(t){FB.api("/me",function(e){u=e.id,d=e.name,S.fbid=u,S.fbname=d,t&&t()})}function e(e,n){"connected"===n.status&&(t(e),l="in")}function n(e,n){$(".loading").hide(),"connected"===n.status?(t("in"!==l?e:e),l="in"):l="out"}function i(t){FB.getLoginStatus(function(n){e(t,n)})}function o(t){FB.getLoginStatus(function(e){n(t,e)})}function a(t){navigator.userAgent.indexOf("Safari"),navigator.userAgent.indexOf("Chrome");if(window.navigator.userAgent.toLowerCase().indexOf("line")<0)FB.login(function(e){o(t)},{scope:r});else{var e=S.host+"m/share.html",n="{uid="+S.uid+"}";location.href="https://www.facebook.com/v3.0/dialog/oauth?client_id="+S.fbAppId+"&redirect_uri="+e+"&state="+n}}function c(t,e,n,i){var o=(arguments.length>4&&void 0!==arguments[4]&&arguments[4],arguments[5]);navigator.userAgent.indexOf("Safari"),navigator.userAgent.indexOf("Chrome");window.navigator.userAgent.toLowerCase().indexOf("line")<0?FB.ui({method:"feed",caption:t,link:i},function(t){o&&o(),t&&t.post_id?S.isSHARE=1:S.isSHARE=0}):location.href="https://www.facebook.com/dialog/feed?app_id="+S.fbAppId+"&display=popup&amp;caption="+t+"&link="+i+"&redirect_uri="+S.host}var s=this,r="public_profile,email,user_friends",l="init",u="0",d="DEFAULT",h=void 0;!function(t,e,n){var i,o=t.getElementsByTagName(e)[0];t.getElementById(n)||(i=t.createElement(e),i.id=n,i.src="https://connect.facebook.net/zh_TW/sdk.js",o.parentNode.insertBefore(i,o))}(document,"script","facebook-jssdk");this.get_FBID=function(){return u},this.get_FBNAME=function(){return d},this.get_state=function(){return l},this.get_ui_post=function(t,e,n,i){c(t,e,n,i,arguments.length>4&&void 0!==arguments[4]?arguments[4]:null,arguments[5])},this.get_login=function(t){a(t)},this.get_checkLoginState=function(t){i(t)},this.initialize=function(t){console.log("fb app start:"+S.fbAppId+"....."),h=t},window.fbAsyncInit=function(){FB.init({appId:S.fbAppId,xfbml:!0,version:"v3.0"}),FB.AppEvents.logPageView(),s.get_checkLoginState(null)}}function a(){function t(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;return 0==t&&(t=c.find(".select-county a:first").data("id")),c.find(".select-county a").each(function(){$(this).data("id")==t?$(this).addClass("act"):$(this).removeClass("act")}),t}function e(){c.find(".select-area a").click(function(){var e=$(this).data("id");""==e&&(e="六都");var n=S.geo[e].cities;o(e),i(n,"city",e);t(0)})}function n(){c.find(".select-county > a").off("click").click(function(){var e=$(this).data("id");t(e)})}function i(t,e,i){c.find(".select-county").html("");for(var o in t)c.find(".select-county").append('\n             <a href="'+prefixUrlCouncilor_global+t[o].cne+"#"+i+'" data-id="'+t[o].cne+'">'+t[o].cne+"</a>\n              ");n()}function o(t){c.find(".select-area > a").each(function(){$(this).data("id")==t?$(this).addClass("act"):$(this).removeClass("act")})}function a(e,n){function a(t){S.geo[t]={cities:[]};var e=S.constituencies,n=$.grep(e,function(e){return"高山原住民"==t?e.district.indexOf("山地原住民")>=0:e.district.indexOf(t)>=0}),i=_.groupBy(n,function(t){return t.county});for(var o in i){console.log("norepeatcts ..."+o);var a=c(o);S.geo[t].cities.push({cne:o,eng:a})}}function c(t){var e=S.allcities;return $.grep(e,function(e){return e.cne.indexOf(t)>=0})[0].eng}!function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"六都";arguments.length>1&&void 0!==arguments[1]&&arguments[1],year_global&&year_global,$.get(jsonUrl_global,function(n){if(n){S.constituencies=n,a("高山原住民"),a("平地原住民"),""==e&&(e="六都");var c=S.geo[e].cities;o(e),i(c,"city",e),t("")}else alert("出現錯誤，請稍後再試！")},"json")}(e,n)}var c=$(".sec2 .findcouncilor");!function(){a("六都",2018),e()}()}function c(){function t(){a.find(".select-area > a").click(function(){var t=$(this).data("id");""==t&&(t="六都");var o=S.geo[t].cities;n(t),i(o,t),e(0)})}function e(t){0==t&&(t=a.find(".select-county a:first").data("id")),$(".select-county  a").each(function(){$(this).data("id")==t?a.find(this).addClass("act"):a.find(this).removeClass("act")})}function n(t){a.find(".select-area > a").each(function(){$(this).data("id")==t?$(this).addClass("act"):$(this).removeClass("act")})}function i(t,e){a.find(".select-county").html("");for(var n in t)a.find(".select-county").append('\n             <a href="'+prefixUrlMayor_global+t[n].cne+"/#"+e+'" data-id="'+t[n].cne+'">'+t[n].cne+"</a>\n              ")}function o(t){console.log("data fetching...."),""==t&&(t="六都");var o=S.geo[t].cities;n(t),i(o,t),e(0)}var a=$(".sec2 .findmayor");!function(){o("六都"),t()}()}function s(){function t(t){console.log("縣市...."+t),l=2,global_location.county=t,global_location.area=void 0,i(),s(t),o(),$(".pop-map .step1").hide(),$(".pop-map .step2").show()}function e(){l=1,$(".pop-map .step2").hide(),$(".pop-map .step1").show()}function n(){$(".pop-map").fadeOut(300),l=1}function i(){void 0!=global_location.county&&($(".county_val").html(global_location.county),void 0!=global_location.area?$(".area_val").html(", "+global_location.area):$(".area_val").html(""))}function o(){$(".pop-map .step2 .select-area-blk a").each(function(){$(this).off("click").click(function(){var t=$(this).data("area");global_location.area=t,i(),n(),u("MayorAndCouncilor")})})}function a(){$("svg").find(".btn-county").each(function(){$(this).click(function(){t($(this).data("county"))})}),$(".pop-map .step1 select").change(function(){t($(this).val())}),$(".pop-map .step1 .select-county-blk > div >a").each(function(){$(this).click(function(e){e.preventDefault(),t($(this).data("county"))})})}function c(t){var e=0,n=30*Math.random(),i=Math.ceil(n);t.each(function(){var t=(e+i)%30+1;$(this).addClass("bg-light-group-color"+t),e++})}function s(t){$(".pop-map .step2 .select-area-blk").html("");for(var e in h[t])console.log(e),$(".pop-map .step2 .select-area-blk").append('<div class="col-xs-6 col-sm-3"><a class="info" href="#" data-area="'+e+'">\n                <p>'+e+'</p>\n                <p class="eng">'+h[t][e]+"</p></a></div>");c($(".pop-map .step2 .select-area-blk > div > a"))}function r(){var t=0;$("svg g#ch > g ").each(function(){t<d.length&&($(this).attr("data-county",d[t]),$(this).addClass("btn-county")),$(this).hover(function(){$("svg g#ch > g ").css("opacity",.4),$(this).css("opacity",1)},function(){$("svg g#ch > g ").css("opacity",1)}),t++}),$(".pop-map .step1 .select-county-blk > div >a").each(function(){var t=$(this).data("county");for(var e in S.geo)for(var n in S.geo[e].cities)S.geo[e].cities[n].cne==t&&$(this).find(".eng").html(S.geo[e].cities[n].eng)}),c($(".pop-map .step1 .select-county-blk > div >a"))}var l=0,d=["台南市","高雄市","南投縣","台中市","苗栗縣","彰化縣","雲林縣","宜蘭縣","花蓮縣","澎湖縣","新北市","嘉義縣","嘉義市","連江縣","金門縣","台東縣","屏東縣","台北市","桃園市","新竹縣","基隆市","新竹市"],h=[];h[0]=["台北市","基隆市","新北市","宜蘭縣","新竹市","新竹縣","桃園市","苗栗縣","台中市","彰化縣","南投縣","嘉義市","嘉義縣","雲林縣","台南市","高雄市","屏東縣","台東縣","花蓮縣","澎湖縣","金門縣","連江縣"],h["台北市"]={"中正區":100,"大同區":103,"中山區":104,"松山區":105,"大安區":106,"萬華區":108,"信義區":110,"士林區":111,"北投區":112,"內湖區":114,"南港區":115,"文山區":116},h["基隆市"]={"仁愛區":200,"信義區":201,"中正區":202,"中山區":203,"安樂區":204,"暖暖區":205,"七堵區":206},h["新北市"]={"萬里區":207,"金山區":208,"板橋區":220,"汐止區":221,"深坑區":222,"石碇區":223,"瑞芳區":224,"平溪區":226,"雙溪區":227,"貢寮區":228,"新店區":231,"坪林區":232,"烏來區":233,"永和區":234,"中和區":235,"土城區":236,"三峽區":237,"樹林區":238,"鶯歌區":239,"三重區":241,"新莊區":242,"泰山區":243,"林口區":244,"蘆洲區":247,"五股區":248,"八里區":249,"淡水區":251,"三芝區":252,"石門區":253},h["宜蘭縣"]={"宜蘭巿":260,"頭城鎮":261,"礁溪鄉":262,"壯圍鄉":263,"員山鄉":264,"羅東鎮":265,"三星鄉":266,"大同鄉":267,"五結鄉":268,"冬山鄉":269,"蘇澳鎮":270,"南澳鄉":272},h["新竹市"]={"東區":300,"北區":300,"香山區":300},h["新竹縣"]={"竹北市":302,"湖口鄉":303,"新豐鄉":304,"新埔鎮":305,"關西鎮":306,"芎林鄉":307,"寶山鄉":308,"竹東鎮":310,"五峰鄉":311,"橫山鄉":312,"尖石鄉":313,"北埔鄉":314,"峨眉鄉":315},h["桃園市"]={"中壢區":320,"平鎮區":324,"龍潭區":325,"楊梅區":326,"新屋區":327,"觀音區":328,"桃園區":330,"龜山區":333,"八德區":334,"大溪區":335,"復興區":336,"大園區":337,"蘆竹區":338},h["苗栗縣"]={"竹南鎮":350,"頭份鎮":351,"三灣鄉":352,"南庄鄉":353,"獅潭鄉":354,"後龍鎮":356,"通霄鎮":357,"苑裡鎮":358,"苗栗市":360,"造橋鄉":361,"頭屋鄉":362,"公館鄉":363,"大湖鄉":364,"泰安鄉":365,"銅鑼鄉":366,"三義鄉":367,"西湖鄉":368,"卓蘭鎮":369},h["台中市"]={"中區":400,"東區":401,"南區":402,"西區":403,"北區":404,"北屯區":406,"西屯區":407,"南屯區":408,"太平區":411,"大里區":412,"霧峰區":413,"烏日區":414,"豐原區":420,"后里區":421,"石岡區":422,"東勢區":423,"和平區":424,"新社區":426,"潭子區":427,"大雅區":428,"神岡區":429,"大肚區":432,"沙鹿區":433,"龍井區":434,"梧棲區":435,"清水區":436,"大甲區":437,"外埔區":438,"大安區":439},h["彰化縣"]={"彰化市":500,"芬園鄉":502,"花壇鄉":503,"秀水鄉":504,"鹿港鎮":505,"福興鄉":506,"線西鄉":507,"和美鎮":508,"伸港鄉":509,"員林鎮":510,"社頭鄉":511,"永靖鄉":512,"埔心鄉":513,"溪湖鎮":514,"大村鄉":515,"埔鹽鄉":516,"田中鎮":520,"北斗鎮":521,"田尾鄉":522,"埤頭鄉":523,"溪州鄉":524,"竹塘鄉":525,"二林鎮":526,"大城鄉":527,"芳苑鄉":528,"二水鄉":530},h["南投縣"]={"南投市":540,"中寮鄉":541,"草屯鎮":542,"國姓鄉":544,"埔里鎮":545,"仁愛鄉":546,"名間鄉":551,"集集鎮":552,"水里鄉":553,"魚池鄉":555,"信義鄉":556,"竹山鎮":557,"鹿谷鄉":558},h["嘉義市"]={"嘉義市":600},h["嘉義縣"]={"番路鄉":602,"梅山鄉":603,"竹崎鄉":604,"阿里山":605,"中埔鄉":606,"大埔鄉":607,"水上鄉":608,"鹿草鄉":611,"太保鄉":612,"朴子市":613,"東石鄉":614,"六腳鄉":615,"新港鄉":616,"民雄鄉":621,"大林鎮":622,"溪口鄉":623,"義竹鄉":624,"布袋鎮":625},h["雲林縣"]={"斗南鎮":630,"大埤鄉":631,"虎尾鎮":632,"土庫鎮":633,"褒忠鄉":634,"東勢鄉":635,"台西鄉":636,"崙背鄉":637,"麥寮鄉":638,"斗六市":640,"林內鄉":643,"古坑鄉":646,"莿桐鄉":647,"西螺鎮":648,"二崙鄉":649,"北港鎮":651,"水林鄉":652,"口湖鄉":653,"四湖鄉":654,"元長鄉":655},h["台南市"]={"中西區":700,"東區":701,"南區":702,"北區":704,"安平區":708,"安南區":709,"永康區":710,"歸仁區":711,"新化區":712,"左鎮區":713,"玉井區":714,"楠西區":715,"南化區":716,"仁德區":717,"關廟區":718,"龍崎區":719,"官田區":720,"麻豆區":721,"佳里區":722,"西港區":723,"七股區":724,"將軍區":725,"學甲區":726,"北門區":727,"新營區":730,"後壁區":731,"白河區":732,"東山區":733,"六甲區":734,"下營區":735,"柳營區":736,"鹽水區":737,"善化區":741,"大內區":742,"山上區":743,"新市區":744,"安定區":745},h["高雄市"]={"新興區":800,"前金區":801,"苓雅區":802,"鹽埕區":803,"鼓山區":804,"旗津區":805,"前鎮區":806,"三民區":807,"楠梓區":811,"小港區":812,"左營區":813,"仁武區":814,"大社區":815,"岡山區":820,"路竹區":821,"阿蓮區":822,"田寮區":823,"燕巢區":824,"橋頭區":825,"梓官區":826,"彌陀區":827,"永安區":828,"湖內區":829,"鳳山區":830,"大寮區":831,"林園區":832,"鳥松區":833,"大樹區":840,"旗山區":842,"美濃區":843,"六龜區":844,"內門區":845,"杉林區":846,"甲仙區":847,"桃源區":848,"那瑪夏區":849,"茂林區":851,"茄萣區":852},h["屏東縣"]={"屏東市":900,"三地鄉":901,"霧台鄉":902,"瑪家鄉":903,"九如鄉":904,"里港鄉":905,"高樹鄉":906,"鹽埔鄉":907,"長治鄉":908,"麟洛鄉":909,"竹田鄉":911,"內埔鄉":912,"萬丹鄉":913,"潮州鎮":920,"泰武鄉":921,"來義鄉":922,"萬巒鄉":923,"崁頂鄉":924,"新埤鄉":925,"南州鄉":926,"林邊鄉":927,"東港鄉":928,"琉球鄉":929,"佳冬鄉":931,"新園鄉":932,"枋寮鄉":940,"枋山鄉":941,"春日鄉":942,"獅子鄉":943,"車城鄉":944,"牡丹鄉":945,"恆春鎮":946,"滿州鄉":947},h["台東縣"]={"台東市":950,"綠島鄉":951,"蘭嶼鄉":952,"延平鄉":953,"卑南鄉":954,"鹿野鄉":955,"關山鎮":956,"海端鄉":957,"池上鄉":958,"東河鄉":959,"成功鎮":961,"長濱鄉":962,"太麻里":963,"金峰鄉":964,"大武鄉":965,"達仁鄉":966},h["花蓮縣"]={"花蓮市":970,"新城鄉":971,"秀林鄉":972,"吉安鄉":973,"壽豐鄉":974,"鳳林鎮":975,"光復鄉":976,"豐濱鄉":977,"瑞穗鄉":978,"萬榮鄉":979,"玉里鎮":981,"卓溪鄉":982,"富里鄉":983},h["澎湖縣"]={"馬公市":880,"西嶼鄉":881,"望安鄉":882,"七美鄉":883,"白沙鄉":884,"湖西鄉":885},h["金門縣"]={"金沙鎮":890,"金湖鎮":891,"金寧鄉":892,"金城鎮":893,"烈嶼鄉":894,"烏坵":896},h["連江縣"]={"南竿":209,"北竿":210,"莒光":211,"東引":212},this.removeMap=function(){n()},this.addMap=function(){$(".pop-map").fadeIn(300),1==l&&e()},function(){i(),r(),a(),l=1}()}function r(){function t(){$(window).on("mousewheel",function(t){var n=$(this).scrollTop(),i=1.5*$("nav").height(),o=void 0,a=void 0,c=void 0,s=void 0;t.deltaY>0?o="up":t.deltaY<=0&&(o="down"),t.preventDefault(),n>=e[0].offset().top-i&&n<e[1].offset().top-i?(console.log("SEC1..... "),a=e[0],c=e[1]):n>=e[1].offset().top-i&&n<e[2].offset().top-i?(console.log("SEC2..... "),a=e[0],c=e[2]):n>=e[2].offset().top-i&&n<e[3].offset().top-i?(console.log("SEC3..... "),a=e[1],c=e[3]):n>=e[3].offset().top-i&&n<e[4].offset().top-i?(console.log("SEC4..... "),a=e[2],c=e[4]):n>=e[4].offset().top-i&&n<e[5].offset().top-i?(console.log("SEC5..... "),a=e[3],c=e[5]):n>=e[5].offset().top-i&&(console.log("SEC6..... "),a=e[4],c=e[5]),"down"===o?s=c:"up"===o&&(s=a),l(s)})}var e=[$("#kv"),$("#MayorAndCouncilor"),$("#seemore"),$("#bills"),$("#votes"),$("#wishingwell")];!function(){t()}()}function l(t){var e=window.opera?"CSS1Compat"==document.compatMode?$("html"):$("body"):$("html,body"),n=void 0,i=$("nav").height();n=t.offset().top;e.stop().animate({scrollTop:n-i},1e3)}function u(t){var e=window.opera?"CSS1Compat"==document.compatMode?$("html"):$("body"):$("html,body"),n=void 0,i=$("nav").height();n=$("#"+t).offset().top;e.stop().animate({scrollTop:n-i},700)}function d(){function t(){m=window.innerWidth/2,$=window.innerHeight/2,s.aspect=window.innerWidth/window.innerHeight,s.updateProjectionMatrix(),l.setSize(window.innerWidth,window.innerHeight)}function e(t){g=0,y=-100}function n(t){1===t.touches.length&&(t.preventDefault(),g=t.touches[0].pageX-m,y=t.touches[0].pageY-$)}function i(t){1===t.touches.length&&(t.preventDefault(),g=t.touches[0].pageX-m,y=t.touches[0].pageY-$)}function o(){requestAnimationFrame(o),a()}function a(){s.position.x+=.05*(0-s.position.x),s.position.y+=.05*(100-s.position.y),s.lookAt(r.position);for(var t=0,e=0;e<f;e++)for(var n=0;n<p;n++)d=u[t++],d.position.y=50*Math.sin(.3*(e+v))-100+50*Math.sin(.5*(n+v)),d.scale.x=d.scale.y=4*(Math.sin(.3*(e+v))+1)+4*(Math.sin(.5*(n+v))+1);l.render(r,s),v+=.1}var c,s,r,l,u,d,h=100,f=50,p=50,v=0,g=0,y=0,m=window.innerWidth/2,$=window.innerHeight/2;!function(){c=document.getElementById("canv_far"),s=new THREE.PerspectiveCamera(75,window.innerWidth/window.innerHeight,1,1e4),s.position.z=1e3,r=new THREE.Scene,u=new Array;for(var o=2*Math.PI,a=new THREE.SpriteCanvasMaterial({color:14784118,program:function(t){t.beginPath(),t.arc(0,0,.5,0,o,!0),t.fill()}}),v=0,g=0;g<f;g++)for(var y=0;y<p;y++)d=u[v++]=new THREE.Sprite(a),d.position.x=g*h-f*h/2,d.position.z=y*h-p*h/2,r.add(d);l=new THREE.CanvasRenderer,l.setPixelRatio(window.devicePixelRatio),l.setSize(window.innerWidth,window.innerHeight),l.setClearColor(16777215,1),c.appendChild(l.domElement),document.addEventListener("mousemove",e,!1),document.addEventListener("touchstart",n,!1),document.addEventListener("touchmove",i,!1),window.addEventListener("resize",t,!1)}(),o()}function h(t){t.find("a").length>=10&&t.slick({dots:!1,infinite:!1,speed:700,slidesToShow:10,slidesToScroll:1,responsive:[{breakpoint:1e3,settings:{slidesToShow:6,slidesToScroll:1,infinite:!1}},{breakpoint:567,settings:{slidesToShow:3,slidesToScroll:3,infinite:!1}}]})}function f(){function t(){var n=Number(e()),i=Number($(".head-j").width()),o=S.mousex-n/2;o>0?($(".hover-area .tri").css("left","75%"),$(".hover-area").css("left",o+i/2-90)):($(".hover-area .tri").css("left","20px"),$(".hover-area").css("left",o+i/2)),requestAnimationFrame(t)}!function(){$("body").mousemove(function(t){t.clientX,t.clientY,S.mousex=t.clientX}),t()}()}function p(t){t.find("a").length>=10&&t.slick({dots:!1,infinite:!1,speed:700,slidesToShow:10,slidesToScroll:1,responsive:[{breakpoint:1e3,settings:{slidesToShow:6,slidesToScroll:1,infinite:!1}},{breakpoint:567,settings:{slidesToShow:3,slidesToScroll:3,infinite:!1}}]})}function v(){function t(){var n=Number(e()),i=Number($(".head-j").width()),o=S.mousex-n/2;o>0?($(".hover-area .tri").css("left","75%"),$(".hover-area").css("left",o+i/2-90)):($(".hover-area .tri").css("left","20px"),$(".hover-area").css("left",o+i/2)),requestAnimationFrame(t)}!function(){$("body").mousemove(function(t){t.clientX,t.clientY,S.mousex=t.clientX}),t()}()}function g(){function t(t){var e=window.opera?"CSS1Compat"==document.compatMode?$("html"):$("body"):$("html,body"),n=void 0,o=$("nav").height()+20;n=$("#"+t).offset().top,e.animate({scrollTop:n-o},700),i(t)}function e(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"game";if(console.log("showPop:"+t),"game"==t)$(".btn-qa-kv").trigger("click");else{var e=t.replace("result","");console.log("result:"+e),$("#result"+e+"_pop").trigger("click"),S.ga.GT("/bot-web",".pv."+t,"")}}function n(){function n(t){var e=$(".navbar .bg-cover"),n=parseInt($("#navbar").css("height","auto").height());"collapse"==t?($("#navbar").css("height",0),$(".navbar-menu").attr("data-toggle","expand"),$("#navbar").animate({height:n},300),TweenMax.to(e,.5,{opacity:1,ease:Expo.easeOut})):($("#navbar").animate({height:0},300),$(".navbar-menu").attr("data-toggle","collapse"),$(window).scrollTop()<60&&TweenMax.to(e,.5,{delay:.2,opacity:0,ease:Expo.easeOut}))}$(".navbar-search").hover(function(){if(TweenMax.to($(this).find("input"),.5,{width:100}),"collapse"!=$(".navbar-menu").attr("data-toggle")){var t=$(".navbar .bg-cover");$("#navbar").animate({height:0},300),$(".navbar-menu").attr("data-toggle","collapse"),$(window).scrollTop()<60&&TweenMax.to(t,.5,{delay:.2,opacity:0,ease:Expo.easeOut})}},function(){TweenMax.to($(this).find("input"),.5,{width:1})}),$(".navbar-menu").click(function(){n($(this).attr("data-toggle"))}),$("a.hash").each(function(){console.log("hash"),$(this).click(function(n){n.preventDefault();var i=$(this).data("ga"),o=$(this).attr("href"),a=$.param.fragment(o).split("/")[1];if(console.log("hash "+a),$("#"+a).parents("html").length>0){var c=$(".navbar-toggle");switch("true"==c.attr("aria-expanded")&&c.trigger("click"),S.ga.GT($(this).parent().hasClass("banner")?"/nav-banner":"/nav",".btn."+i,""),i){case"game":1!=S.started&&e(a);break;case"promo":case"blogger":t(i);break;case"trial":sendTrackParam("JYfp037zYK7Q","btn A","","","","","","","","","","",""),t(i)}}else S.ga.GT($(this).parent().hasClass("banner")?"/nav-banner":"/nav",".btn."+i,""),$(this).parent().hasClass("banner")&&("trial"==i?(sendTrackParam("JYfp037zYK7Q","","btn B","","","","","","","","","",""),findoutRedeemNow()):findoutPetCombination()),setTimeout(function(){location.href=o},300);return!1})}),$("nav ul li ").each(function(){$(this).hover(function(){TweenMax.to($(this).find(".line"),.5,{opacity:1,scaleX:1,transformOrigin:"0% 0%",ease:Cubic.easeOut})},function(){$(this).hasClass("act")||TweenMax.to($(this).find(".line"),.5,{opacity:0,scaleX:0,transformOrigin:"0% 0%",ease:Cubic.easeIn})})})}function i(t){r=t,$("nav #navbar > ul > li ").each(function(){var t=$(this).data("ga");r==t?$(this).addClass("act"):($(this).removeClass("act"),TweenMax.to($(this).find(".line"),.5,{opacity:0,scaleX:0,transformOrigin:"0% 0%",ease:Cubic.easeOut}))})}function o(t,e,n){clearTimeout(l)}function a(){function t(t,e,n,i,o){o.preventDefault(),"disable"==n?alert("敬請期待!"):"_blank"===t?"tvc"==i?($(".pop-tvc").fadeIn("fast"),TweenMax.to($(".banner"),.5,{x:140,ease:Cubic.easeOut})):window.open(e,t):setTimeout(function(){window.open(e,"_self")},300)}$("nav li ").not(".hash").each(function(){$(this).hover(function(){var t=$(this).data("id");t!=r&&o($(this),t,"act")},function(){var t=$(this).data("id");t!=r&&o($(this),t,"dis")}),$(this).find(".tracklink").click(function(e){var n=$(this).attr("target"),i=$(this).attr("href"),o=$(this).data("act"),a=$(this).data("ga");return S.ga.GT("/nav",".btn."+a,""),"tobuy"==a&&console.log("tobuy ...... media"),t(n,i,o,a,e),!1})}),$(".wrapper .tracklink").click(function(e){var n=$(this).attr("target"),i=$(this).attr("href"),o=$(this).data("act"),a=$(this).data("ga"),c=$("#page").val();if(S.ga.GT("/"+c,".btn."+a,""),"tobuy1"==a||"tobuy2"==a||"tobuy3"==a)switch(console.log("tobuy ......media"),a){case"tobuy1":momBuyEnergy();break;case"tobuy2":momBuyWaterMilk()}return t(n,i,o,a,e),!1}),$(".navbar-header").find(".tracklink").click(function(e){var n=$(this).attr("target"),i=$(this).attr("href"),o=$(this).data("act"),a=$(this).data("ga");return S.ga.GT("/nav",".btn."+a),t(n,i,o,a,e),!1})}function c(){var n=location.href,i=$.param.fragment(n);if(console.log("hash "+i),i)try{if($("#"+i).parents("html").length>0){if("game"==i||i.indexOf("result")>=0)return void e(i);setTimeout(function(){t(i)},1e3)}}catch(t){}}function s(){S.top>0?("on"!=u&&(TweenMax.killTweensOf($(".navbar >.container >.bg")),TweenMax.to($(".navbar >.container >.bg"),1,{opacity:1,ease:Expo.easeOut})),u="on"):("off"!=u&&(TweenMax.killTweensOf($(".navbar >.container >.bg")),TweenMax.to($(".navbar >.container >.bg"),1,{opacity:0,ease:Expo.easeOut})),u="off"),setTimeout(s,20)}var r=0,l=void 0,u="off";this.getupdateState=function(t){i(t)},this.init=function(){setTimeout(c,100),a(),n(),s()},this.init()}function y(){function t(){switch($("#page").val()){default:return new V,!0;case"county-mayor-area":return new P,!0;case"county-mayor":return new U,!0;case"resume":return new M,!0;case"councilmen-area":return new E,!0;case"councilmen-county":return new I,!0;case"councilmen":return new H,!0;case"seemore":return new W,!0;case"seemore-detail":return new D,!0;case"bill-area":return new j,!0;case"bill-county":return new N,!0;case"bill":return new A,!0;case"ballot":return new L,!0;case"wish-list":return new F,!0;case"wish":return new Y,!0;case"wish-editor":return new R,!0}}var e=window.requestAnimationFrame||window.mozRequestAnimationFrame||window.webkitRequestAnimationFrame||window.msRequestAnimationFrame||function(t){window.setTimeout(t,1e3/60)};window.requestAnimationFrame=e,function(){new T($("body img"),function(){X.menu=new g,t()&&($(".loading img").fadeOut(500),$(".loading").delay(500).fadeOut(500))})}(),console.log("app start.....")}var m=function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")},b=function(){function t(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}return function(e,n,i){return n&&t(e.prototype,n),i&&t(e,i),e}}(),w=function t(e,n,i){null===e&&(e=Function.prototype);var o=Object.getOwnPropertyDescriptor(e,n);if(void 0===o){var a=Object.getPrototypeOf(e);return null===a?void 0:t(a,n,i)}if("value"in o)return o.value;var c=o.get;if(void 0!==c)return c.call(i)},k=function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)},C=function(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e};String.prototype.insert=function(t,e){return t>0?this.substring(0,t)+e+this.substring(t,this.length):e+this};var T=function(){function t(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;m(this,t),this.$imgs=e,this.imagesN=e.length,this.cb=n,this.c=0,this.count=0,this.oldInd=0,this.init()}return b(t,[{key:"reset",value:function(){}},{key:"anim",value:function(t){console.log("anim...............")}},{key:"pngFix",value:function(){var t=this;$(this).find('img[src$=".png"],img[src$=".gif"]').each(function(){console.log("png Fix!...."),t.style.filter="progid:DXImageTransform.Microsoft.AlphaImageLoader(enabled='true',sizingMethod='image',src='"+t.src+"')"})}},{key:"init",value:function(){var t=this;n(),this.reset(),this.$imgs.imagesLoaded().progress(function(e,n){t.count++;var i=Math.floor(t.count/t.$imgs.length*100);$(".loading .ld .txt").html(i);parseInt(i/11,10);t.oldInd=t.ind,t.count===t.$imgs.length&&(t.pngFix(),t.cb&&t.cb())})}}]),t}(),S={};S.TEST=0,S.host="./",S.mobile_root="./",S.api_root="./",S.gaId="",S.fbAppId="135077620505268",S.geo={"六都":{cities:[{cne:"臺北市",eng:"TPE"},{cne:"新北市",eng:"TPH"},{cne:"桃園市",eng:"TYC"},{cne:"臺中市",eng:"TXG"},{cne:"臺南市",eng:"TNN"},{cne:"高雄市",eng:"KHH"}]},"北部":{cities:[{cne:"臺北市",eng:"TPE"},{cne:"新北市",eng:"TPH"},{cne:"基隆市",eng:"KLU"},{cne:"桃園市",eng:"TYC"},{cne:"新竹市",eng:"HSC"},{cne:"新竹縣",eng:"HSH"}]},"中部":{cities:[{cne:"苗栗縣",eng:"MAL"},{cne:"臺中市",eng:"TXG"},{cne:"彰化縣",eng:"CWH"},{cne:"南投縣",eng:"NTO"},{cne:"雲林縣",eng:"YUN"}]},"南部":{cities:[{cne:"嘉義縣",eng:"CHY"},{cne:"嘉義市",eng:"CYI"},{cne:"臺南市",eng:"TNN"},{cne:"高雄市",eng:"KHH"},{cne:"屏東縣",eng:"IUH"}]},"東部":{cities:[{cne:"宜蘭縣",eng:"ILN"},{cne:"花蓮縣",eng:"HWA"},{cne:"臺東縣",eng:"TTT"}]},"離島":{cities:[{cne:"金門縣",eng:"KMN"},{cne:"連江縣",eng:"LNN"},{cne:"澎湖縣",eng:"PEH"}]}},S.allcities=[{cne:"臺北市",eng:"TPE"},{cne:"新北市",eng:"TPH"},{cne:"桃園市",eng:"TYC"},{cne:"臺中市",eng:"TXG"},{cne:"臺南市",eng:"TNN"},{cne:"高雄市",eng:"KHH"},{cne:"臺北市",eng:"TPE"},{cne:"新北市",eng:"TPH"},{cne:"基隆市",eng:"KLU"},{cne:"桃園市",eng:"TYC"},{cne:"新竹市",eng:"HSC"},{cne:"新竹縣",eng:"HSH"},{cne:"苗栗縣",eng:"MAL"},{cne:"苗栗市",eng:"MAC"},{cne:"臺中市",eng:"TXG"},{cne:"彰化縣",eng:"CWH"},{cne:"彰化市",eng:"CWS"},{cne:"南投市",eng:"NTC"},{cne:"南投縣",eng:"NTO"},{cne:"雲林縣",eng:"YUN"},{cne:"嘉義縣",eng:"CHY"},{cne:"嘉義市",eng:"CYI"},{cne:"臺南市",eng:"TNN"},{cne:"高雄市",eng:"KHH"},{cne:"屏東縣",eng:"IUH"},{cne:"屏東市",eng:"PTS"},{cne:"宜蘭縣",eng:"ILN"},{cne:"宜蘭市",eng:"ILC"},{cne:"花蓮縣",eng:"HWA"},{cne:"花蓮市",eng:"HWC"},{cne:"臺東市",eng:"TTC"},{cne:"臺東縣",eng:"TTT"},{cne:"金門縣",eng:"KMN"},{cne:"連江縣",eng:"LNN"},{cne:"澎湖縣",eng:"PEH"}];var O=function(){this.tags=["360-cors-upload"],this.categoryId=22,this.videoId="",this.uploadStartTime=0};O.prototype.ready=function(t){this.accessToken=t,this.gapi=gapi,this.authenticated=!0,this.gapi.client.request({path:"/youtube/v3/channels",params:{part:"snippet",mine:!0},callback:function(t){t.error?console.log(t.error.message):($("#channel-name").text(t.items[0].snippet.title),$("#channel-thumbnail").attr("src",t.items[0].snippet.thumbnails.default.url),$(".pre-sign-in").hide(),$(".post-sign-in").show())}.bind(this)}),$("#button").on("click",this.handleUploadClicked.bind(this))},O.prototype.uploadFile=function(t){var e={snippet:{title:$("#title").val(),description:$("#description").text(),tags:this.tags,categoryId:this.categoryId},status:{privacyStatus:$("#privacy-status option:selected").text()}},n=new MediaUploader({baseUrl:"https://www.googleapis.com/upload/youtube/v3/videos",file:t,token:this.accessToken,metadata:e,params:{part:Object.keys(e).join(",")},onError:function(t){var e=t;try{e=JSON.parse(t).error.message}finally{alert(e)}}.bind(this),onProgress:function(t){var e=Date.now(),n=t.loaded,i=t.total,o=(this.uploadStartTime,100*n/i);$("#upload-progress").attr({value:n,max:i}),$("#percent-transferred").text(o),$("#bytes-transferred").text(n),$("#total-bytes").text(i),$(".during-upload").show()}.bind(this),onComplete:function(t){var e=JSON.parse(t);this.videoId=e.id,$("#video-id").text(this.videoId),$(".post-upload").show(),this.pollForVideoStatus()}.bind(this)});this.uploadStartTime=Date.now(),n.upload()},O.prototype.handleUploadClicked=function(){$("#button").attr("disabled",!0),this.uploadFile($("#file").get(0).files[0])},O.prototype.pollForVideoStatus=function(){this.gapi.client.request({path:"/youtube/v3/videos",params:{part:"status,player",id:this.videoId},callback:function(t){if(t.error)console.log(t.error.message),setTimeout(this.pollForVideoStatus.bind(this),6e4);else{var e=t.items[0].status.uploadStatus;switch(e){case"uploaded":$("#post-upload-status").append("<li>Upload status: "+e+"</li>"),setTimeout(this.pollForVideoStatus.bind(this),6e4);break;case"processed":$("#player").append(t.items[0].player.embedHtml),$("#post-upload-status").append("<li>Final status.</li>");break;default:$("#post-upload-status").append("<li>Transcoding failed.</li>")}}}.bind(this)})};var x=function(){function e(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"index",n=arguments.length>1&&void 0!==arguments[1]&&arguments[1],i=arguments.length>2&&void 0!==arguments[2]&&arguments[2],o=arguments.length>3&&void 0!==arguments[3]&&arguments[3];m(this,e),this.NAME=t,this.ifFB=n,this.ifYT=i,this.ifScrollHandle=o}return b(e,[{key:"bind",value:function(){console.log(this.NAME+" binding....."),$(".btn-about a").click(function(t){t.preventDefault(),$(".pop-about").fadeIn(300)}),$(".pop-about .btn-close").click(function(t){t.preventDefault(),$(".pop-about").fadeOut(300)})}},{key:"init",value:function(){if(console.log(this.NAME+" initialing....."),this.ifFB&&console.log("page:"+this.NAME+" add fb ing....."),this.ifYT&&(console.log("page:"+this.NAME+" add youtube....."),this.YT=new i($(".yt").data("id"),"player"),onYouTubeIframeAPIReady=this.YT.onYouTubeIframeAPIReady),this.ifScrollHandle){var e=function(e){var n=$("#page").val(),i=$(window).scrollTop(),o=$(".navbar .bg-cover"),a=$(".navbar-menu").attr("data-toggle");if(S.top=i,i>60||"expand"==a?TweenMax.to(o,.5,{opacity:1,ease:Expo.easeOut}):TweenMax.to(o,.5,{opacity:0,ease:Expo.easeOut}),"index"==n){i>=t()-90?$(".navbar-brand").fadeIn(500):$(".navbar-brand").fadeOut()}else $(".navbar-brand").fadeIn(500);"resume"==n&&"collapse"==a&&(i>60?(TweenMax.to($(".navbar"),.5,{top:-$(".navbar").height(),ease:Expo.easeOut}),TweenMax.to($(".wrapper-header"),.5,{top:0,ease:Expo.easeOut})):(TweenMax.to($(".navbar"),.5,{top:0,ease:Expo.easeOut}),TweenMax.to($(".wrapper-header"),.5,{top:$(".navbar").height(),ease:Expo.easeOut})))};window.onscroll=function(t){e()},e()}location.href.indexOf("localhost")>=0&&(this.TEST=!0,console.log("run test mode......")),this.bind()}},{key:"onresize",value:function(t){$(window).resize(t)}}]),e}(),V=(window.opera?"CSS1Compat"==document.compatMode?$("html"):$("body"):$("html,body"),function(t){function e(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"index",n=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],i=arguments.length>2&&void 0!==arguments[2]&&arguments[2],o=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];m(this,e);var l=C(this,(e.__proto__||Object.getPrototypeOf(e)).call(this,t,n,i,o));return l.TEST=!1,l.bind=l.bind.bind(l),l.init(),l.watchScroll(),l.map=new s,new c,new a,new d,new r,l}return k(e,t),b(e,[{key:"init",value:function(){var t=this;w(e.prototype.__proto__||Object.getPrototypeOf(e.prototype),"init",this).call(this),$(".pop-about .part-left").mCustomScrollbar({theme:"my-theme1",axis:"y"}),$(".pop-about .part-right").mCustomScrollbar({theme:"my-theme2",axis:"y"}),$(".pop-about .partmb").mCustomScrollbar({theme:"my-theme1",axis:"y"}),(device.mobile()||device.tablet())&&$(".step1").mCustomScrollbar({theme:"my-theme1",axis:"y"}),$(".step2").mCustomScrollbar({theme:"my-theme1",axis:"y"}),t.anim()}},{key:"anim",value:function(){TweenMax.fromTo($("#kv .title "),.7,{opacity:0},{delay:2,opacity:1});var t=0;$("#kv .sub > * ").each(function(){TweenMax.fromTo($(this),1,{opacity:0,y:20},{delay:2+.1*t,y:0,opacity:1}),t++}),TweenMax.fromTo($("#kv .locator > .ico "),.8,{opacity:0,scaleX:1.1,scaleY:1.1},{delay:3,y:0,opacity:1,scaleX:1,scaleY:1}),TweenMax.fromTo($("#kv .locator  span "),.8,{opacity:0},{delay:3.2,y:0,opacity:1})}},{key:"watchScroll",value:function(){}},{key:"bind",value:function(){w(e.prototype.__proto__||Object.getPrototypeOf(e.prototype),"bind",this).call(this);var t=this;$(".btn-findCouncilmen").click(function(){u("findcouncilor")}),$(".btn-findMayor").click(function(){u("findmayor")}),
$(".btn-autolocate").click(function(){$(".locator").fadeOut(300),$(".locator-ed").delay(300).fadeIn(300)}),$(".btn-chooseLocation").click(function(){t.map.addMap()}),$(".pop-map .btn-close").click(function(){t.map.removeMap()})}}]),e}(x)),M=(window.opera?"CSS1Compat"==document.compatMode?$("html"):$("body"):$("html,body"),function(t){function e(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"resume",n=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],i=arguments.length>2&&void 0!==arguments[2]&&arguments[2],o=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];m(this,e);var a=C(this,(e.__proto__||Object.getPrototypeOf(e)).call(this,t,n,i,o));return a.TEST=!1,a.init(),a.watchScroll(),a.slickTool(),a.updateView(),a}return k(e,t),b(e,[{key:"init",value:function(){w(e.prototype.__proto__||Object.getPrototypeOf(e.prototype),"init",this).call(this)}},{key:"updateView",value:function(){var t=$(".wrapper-header").data("type");$(".nav-resume-all  a").each(function(){$(this).data("type")==t&&$(this).addClass("act")}),$("nav.navbar , nav.navbar .bg-cover").addClass("bg-"+t)}},{key:"slickTool",value:function(){$(".nav-resume-all").on("init",function(){console.log("carousel3 has init...."),$(".nav-resume-all .slick-prev").html('<i class="fa fa-arrow-right"></i>'),$(".nav-resume-all .slick-next").html('<i class="fa fa-arrow-right"></i>')}),$(".nav-resume-all").slick({dots:!1,infinite:!1,speed:700,slidesToShow:5,slidesToScroll:1,responsive:[{breakpoint:767,settings:{slidesToShow:4,slidesToScroll:4,infinite:!1}},{breakpoint:567,settings:{slidesToShow:3,slidesToScroll:3,infinite:!1}}]})}},{key:"anim",value:function(){}},{key:"watchScroll",value:function(){}},{key:"bind",value:function(){}}]),e}(x)),P=(window.opera?"CSS1Compat"==document.compatMode?$("html"):$("body"):$("html,body"),function(t){function e(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"county-mayer-area",n=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],i=arguments.length>2&&void 0!==arguments[2]&&arguments[2],o=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];m(this,e);var a=C(this,(e.__proto__||Object.getPrototypeOf(e)).call(this,t,n,i,o));a.TEST=!1,a.init(),a.watchScroll();var c=a.chkIgContainsHash();return a.datafetch(c),a}return k(e,t),b(e,[{key:"chkIgContainsHash",value:function(){var t=location.href,e=$.param.fragment(t);return e&&console.log("hash "+e),decodeURIComponent(e)}},{key:"init",value:function(){w(e.prototype.__proto__||Object.getPrototypeOf(e.prototype),"init",this).call(this)}},{key:"datafetch",value:function(t){var e=this;console.log("data fetching...."),""==t&&(t="六都");var n=S.geo[t].cities;e.updateViewUi(t),e.updateView(n)}},{key:"updateViewUi",value:function(t){$(".select-area > a").each(function(){$(this).data("id")==t?$(this).addClass("act"):$(this).removeClass("act")}),S.area=t}},{key:"updateView",value:function(t){var e=this;$(".select-county-blk").html("");for(var n in t)$(".select-county-blk").append('\n                <div class="col-xs-6 col-sm-3"><a class="info" href="/candidates/mayors/'+t[n].cne+"/#"+S.area+'">\n              <p>'+t[n].cne+'</p>\n              <p class="eng">'+t[n].eng+"</p></a></div>\n              ");e.anim()}},{key:"anim",value:function(){console.log("update View...");var t=0,e=30*Math.random(),n=Math.ceil(e);$(".select-county-blk > div ").each(function(){var e=(t+n)%30+1;$(this).find(".info").addClass("bg-light-group-color"+e),TweenMax.fromTo($(this),.7,{opacity:0,y:20},{delay:.5+.05*t,opacity:1,y:0,ease:Back.easeOut}),t++})}},{key:"watchScroll",value:function(){}},{key:"bind",value:function(){var t=this;$(".select-area > a").click(function(){var e=$(this).data("id");t.datafetch(e)})}}]),e}(x)),U=(window.opera?"CSS1Compat"==document.compatMode?$("html"):$("body"):$("html,body"),function(t){function e(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"county-mayer",n=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],i=arguments.length>2&&void 0!==arguments[2]&&arguments[2],o=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];m(this,e);var a=C(this,(e.__proto__||Object.getPrototypeOf(e)).call(this,t,n,i,o));a.TEST=!1,a.init(),a.watchScroll();var c=a.chkIgContainsHash();return a.datafetch(c),a.anim(),a}return k(e,t),b(e,[{key:"chkIgContainsHash",value:function(){var t=location.href,e=$.param.fragment(t);return e&&(console.log("hash "+e),S.area=e),decodeURIComponent(e)}},{key:"init",value:function(){w(e.prototype.__proto__||Object.getPrototypeOf(e.prototype),"init",this).call(this)}},{key:"datafetch",value:function(t){var e=this;console.log("data fetching...."),""==t&&(t="六都");var n=S.geo[t].cities;e.updateViewUi(t),e.updateView(n),e.updateViewUiCounty(county_global)}},{key:"updateViewUi",value:function(t){$(".select-area > a").each(function(){$(this).data("id")==t?$(this).addClass("act"):$(this).removeClass("act")}),S.area=t}},{key:"updateViewUiCounty",value:function(t){0==t&&(t=$(".select-county a:first").data("id")),$(".select-county  a").each(function(){$(this).data("id")==t?$(this).addClass("act"):$(this).removeClass("act")})}},{key:"updateView",value:function(t){$(".select-county").html("");for(var e in t)$(".select-county").append('\n             <a href="'+prefixUrl_global+t[e].cne+"/#"+S.area+'" data-id="'+t[e].cne+'">'+t[e].cne+"</a>\n              ")}},{key:"anim",value:function(){var t=this;console.log("update View...");var e=0,n=30*Math.random(),i=Math.ceil(n);$(".content-list > .content-item ").each(function(){var t=(e+i)%30+1;$(this).addClass("bg-dark-group-color"+t),TweenMax.fromTo($(this),.7,{opacity:0,y:20},{delay:.5+.05*e,opacity:1,y:0,ease:Back.easeOut}),e++}),t.detailbind()}},{key:"watchScroll",value:function(){}},{key:"detailbind",value:function(){function t(t,e){var n=t.height(),i=t.css("height","auto").height();t.height(n),t.stop().animate({height:i},e)}var e={};$(".content-item").each(function(){var n=$(this).data("id");$(this).find(".content-detail ").css("height",0),e[n]=0,$(this).find(".btn-detail").click(function(){var i=$(this).parent().parent().parent(),o=(i.data("id"),i.find(".content-detail"));0==e[n]?(t(o,500),e[n]=1):(o.animate({height:"0"},500),e[n]=0)})})}},{key:"bind",value:function(){console.log("binding....");var t=this;$(".select-area > a").click(function(){var e=$(this).data("id");""==e&&(e="六都");var n=S.geo[e].cities;t.updateViewUi(e),t.updateView(n),t.updateViewUiCounty(0)})}}]),e}(x)),E=(window.opera?"CSS1Compat"==document.compatMode?$("html"):$("body"):$("html,body"),function(t){function e(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"county-mayer-area",n=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],i=arguments.length>2&&void 0!==arguments[2]&&arguments[2],o=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];m(this,e);var a=C(this,(e.__proto__||Object.getPrototypeOf(e)).call(this,t,n,i,o));a.TEST=!1,a.init(),a.watchScroll();var c=a.chkIgContainsHash();return a.datafetch(c),a}return k(e,t),b(e,[{key:"init",value:function(){w(e.prototype.__proto__||Object.getPrototypeOf(e.prototype),"init",this).call(this)}},{key:"chkIgContainsHash",value:function(){var t=location.href,e=$.param.fragment(t);return e&&console.log("hash "+e),decodeURIComponent(e)}},{key:"datafetch",value:function(){function t(t){S.geo[t]={cities:[]};var n=S.constituencies,i=$.grep(n,function(e){return"高山原住民"==t?e.district.indexOf("山地原住民")>=0:e.district.indexOf(t)>=0}),o=_.groupBy(i,function(t){return t.county});for(var a in o){console.log("norepeatcts ..."+a);var c=e(a);S.geo[t].cities.push({cne:a,eng:c})}}function e(t){var e=S.allcities;return $.grep(e,function(e){return e.cne.indexOf(t)>=0})[0].eng}var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"六都",i=(arguments.length>1&&void 0!==arguments[1]&&arguments[1],this);year_global&&year_global,$.get(jsonUrl_global,function(e){if(e){S.constituencies=e,t("高山原住民"),t("平地原住民"),""==n&&(n="六都");var o=S.geo[n].cities;i.updateViewUi(n),i.updateView(o,"city")}else alert("出現錯誤，請稍後再試！")},"json")}},{key:"updateViewUi",value:function(t){$(".select-area > a").each(function(){$(this).data("id")==t?$(this).addClass("act"):$(this).removeClass("act")})}},{key:"updateView",value:function(t,e){var n=this;$(".select-county-blk").html("");var i=n.chkIgContainsHash();if("city"==e)for(var o in t)$(".select-county-blk").append('\n                  <div class="col-xs-6 col-sm-3"><a class="info" href="/candidates/councilors/'+t[o].cne+"/#"+i+'">\n                  <p>'+t[o].cne+'</p>\n                  <p class="eng">'+t[o].eng+"</p></a>\n                  </div>\n                  ");else for(var a in t)$(".select-county-blk").append('\n                  <div class="col-xs-6 col-sm-3">\n                  <a class="info councilmen-area" href="/candidates/councilors/'+t[a].cne+"/#"+i+'">\n                  <p></p>\n                  <p class="eng">01</p>\n                  <div class="area-info">桃源區、那瑪夏區、甲\n                    仙區、六龜區、杉林區\n                    、內門區、旗山區、美\n                    濃區、茂林區 </div>\n                  </a>\n                  \n                  </div>\n                  ');n.anim()}},{key:"anim",value:function(){console.log("update View...");var t=0,e=30*Math.random(),n=Math.ceil(e);$(".select-county-blk > div ").each(function(){var e=(t+n)%30+1;$(this).find(".info").addClass("bg-light-group-color"+e),TweenMax.fromTo($(this),.7,{opacity:0,y:20},{delay:.5+.05*t,opacity:1,y:0,ease:Back.easeOut}),t++})}},{key:"watchScroll",value:function(){}},{key:"bind",value:function(){var t=this;$(".select-area > a").click(function(){var e=$(this).data("id");t.datafetch(e)})}}]),e}(x)),I=(window.opera?"CSS1Compat"==document.compatMode?$("html"):$("body"):$("html,body"),function(t){function e(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"councilmen county",n=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],i=arguments.length>2&&void 0!==arguments[2]&&arguments[2],o=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];m(this,e);var a=C(this,(e.__proto__||Object.getPrototypeOf(e)).call(this,t,n,i,o));a.TEST=!1,a.init(),a.watchScroll();var c=a.chkIgContainsHash();return a.datafetch(c),a}return k(e,t),b(e,[{key:"init",value:function(){w(e.prototype.__proto__||Object.getPrototypeOf(e.prototype),"init",this).call(this)}},{key:"chkIgContainsHash",value:function(){var t=location.href,e=$.param.fragment(t);return e&&console.log("hash "+e),decodeURIComponent(e)}},{key:"datafetch",value:function(t,e){function n(t){S.geo[t]={cities:[]};var e=S.constituencies,n=$.grep(e,function(e){return"高山原住民"==t?e.district.indexOf("山地原住民")>=0:e.district.indexOf(t)>=0}),o=_.groupBy(n,function(t){return t.county});for(var a in o){console.log("norepeatcts ..."+a);var c=i(a);S.geo[t].cities.push({cne:a,eng:c})}}function i(t){var e=S.allcities;return $.grep(e,function(e){return e.cne.indexOf(t)>=0})[0].eng}var o=this;!function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"六都";arguments.length>1&&void 0!==arguments[1]&&arguments[1],year_global&&year_global,$.get(jsonUrl_global,function(e){if(e){S.constituencies=e,n("高山原住民"),n("平地原住民"),""==t&&(t="六都");var i=S.geo[t].cities;o.updateViewUi(t),o.updateView(i,"city");var a=o.updateViewUiCounty(county_global);o.updateViewCounty(a)}else alert("出現錯誤，請稍後再試！")},"json")}(t,e)}},{key:"updateViewUi",value:function(t){$(".select-area > a").each(function(){$(this).data("id")==t?$(this).addClass("act"):$(this).removeClass("act")}),S.area=t}},{key:"updateViewUiCounty",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;return 0==t&&(t=$(".select-county a:first").data("id")),S.county=t,$(".select-county a").each(function(){$(this).data("id")==t?$(this).addClass("act"):$(this).removeClass("act")}),t}},{key:"updateView",value:function(t,e){var n=this;$(".select-county  a").length>=10&&$(".select-county").slick("unslick"),$(".select-county").html("");for(var i in t)$(".select-county").append('\n             <a href="#'+S.area+'" data-id="'+t[i].cne+'">'+t[i].cne+"</a>\n              ");n.bindcounty(),$(".select-county  a").length>=10&&$(".select-county").slick({dots:!1,infinite:!1,speed:700,slidesToShow:10,slidesToScroll:1,responsive:[{breakpoint:1e3,settings:{slidesToShow:6,slidesToScroll:1,infinite:!1}},{breakpoint:567,settings:{slidesToShow:3,slidesToScroll:3,infinite:!1}}]})}},{key:"updateViewCounty",value:function(t){var e=this,n=void 0;if(S.area.indexOf("原住民")<0){var i=S.constituencies;n=$.grep(i,function(e){return e.county.indexOf(t)>=0})}else{var o=S.constituencies,a="高山原住民"==S.area?"山地原住民":S.area;n=$.grep(o,function(e){return e.county.indexOf(t)>=0&&e.district.indexOf(a)>=0})}$(".select-county-blk").html("");for(var c in n)$(".select-county-blk").append('\n                  <div class="col-xs-6 col-sm-3">\n                  <a class="info councilmen-area" href="/candidates/councilors/'+n[c].county+"/"+n[c].constituency+"/#"+S.area+'">\n                  <p></p>\n                  <p class="eng">'+n[c].constituency+'</p>\n                  <div class="area-info">\n                    <div class="areas">\n                    '+n[c].district+"\n                    </div>\n                  </div>\n                  </a>\n                  \n                  </div>\n                  ");e.anim()}},{key:"anim",value:function(){console.log("update View...");var t=0,e=30*Math.random(),n=Math.ceil(e);$(".select-county-blk > div ").each(function(){var e=(t+n)%30+1;$(this).find(".info").addClass("bg-light-group-color"+e),TweenMax.fromTo($(this),.7,{opacity:0,y:20},{delay:.5+.05*t,opacity:1,y:0,ease:Back.easeOut}),t++;var i=$(this).find(".area-info").height(),o=$(this).find(".area-info .areas").height();if(console.log("boxh..."+i),console.log("contenth..."+o),i<o){TweenMax.fromTo($(this).find(".area-info .areas"),8,{y:i},{delay:0*t,y:-o,repeat:-1,ease:Linear.easeNone})}})}},{key:"watchScroll",value:function(){}},{key:"bindcounty",value:function(){var t=this;$(".select-county > a").off("click").click(function(){var e=$(this).data("id");console.log("id..."+e);var n=t.updateViewUiCounty(e);t.updateViewCounty(n)})}},{key:"bind",value:function(){var t=this;$(".select-area a").click(function(){var e=$(this).data("id");""==e&&(e="六都");var n=S.geo[e].cities;t.updateViewUi(e),t.updateView(n,"city");var i=t.updateViewUiCounty(0);t.updateViewCounty(i)})}}]),e}(x)),H=(window.opera?"CSS1Compat"==document.compatMode?$("html"):$("body"):$("html,body"),function(t){function e(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"councilmen",n=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],i=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];m(this,e);var c=C(this,(e.__proto__||Object.getPrototypeOf(e)).call(this,t,n,i,a));c.TEST=!1,c.fb=new o,c.init(),c.watchScroll();var s=c.chkIgContainsHash();return c.datafetch(s),c}return k(e,t),b(e,[{key:"init",value:function(){w(e.prototype.__proto__||Object.getPrototypeOf(e.prototype),"init",this).call(this),new f}},{key:"chkIgContainsHash",value:function(){var t=location.href,e=$.param.fragment(t);return e&&console.log("hash "+e),decodeURIComponent(e)}},{key:"datafetch",value:function(t,e){function n(t){S.geo[t]={cities:[]};var e=S.constituencies,n=$.grep(e,function(e){return"高山原住民"==t?e.district.indexOf("山地原住民")>=0:e.district.indexOf(t)>=0}),o=_.groupBy(n,function(t){return t.county});for(var a in o){console.log("norepeatcts ..."+a);var c=i(a);S.geo[t].cities.push({cne:a,eng:c})}}function i(t){var e=S.allcities;return $.grep(e,function(e){return e.cne.indexOf(t)>=0})[0].eng}var o=this;!function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"六都";arguments.length>1&&void 0!==arguments[1]&&arguments[1],year_global&&year_global,$.get(jsonUrl_global,function(e){if(e){S.constituencies=e,n("高山原住民"),n("平地原住民"),console.log("area..."+t),console.log("GLOBAL.county..."+S.county),""==t&&(t="六都");var i=S.geo[t].cities;o.updateViewUi(t),o.updateView(i,"city");var a=o.updateViewUiCounty(county_global);o.updateViewCounty(a),o.updateViewUiConstituency(constituency_global)}else alert("出現錯誤，請稍後再試！")},"json")}(t,e)}},{key:"updateViewUi",value:function(t){$(".select-area > a").each(function(){$(this).data("id")==t?$(this).addClass("act"):$(this).removeClass("act")}),S.area=t}},{key:"updateViewUiCounty",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;return 0==t&&(t=$(".select-county a:first").data("id")),S.county=t,$(".select-county a").each(function(){$(this).data("id")==t?$(this).addClass("act"):$(this).removeClass("act")}),t}},{key:"updateViewUiConstituency",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;0==t&&(t=$(".select-constituency a:first").data("id")),S.constituency=t,$(".select-constituency a").each(function(){$(this).data("id")==t?$(this).addClass("act"):$(this).removeClass("act")}),this.anim()}},{key:"updateView",value:function(t,e){var n=this;$(".select-county  a").length>=10&&$(".select-county").slick("unslick"),$(".select-county").html("");for(var i in t)$(".select-county").append('\n             <a href="'+prefixUrl_global+t[i].cne+"/#"+S.area+'" data-id="'+t[i].cne+'">'+t[i].cne+"</a>\n              \n              ");n.bindcounty(),h($(".select-county"))}},{key:"updateViewCounty",value:function(t){var e=void 0;if(S.area.indexOf("原住民")<0){var n=S.constituencies;e=$.grep(n,function(e){return e.county.indexOf(t)>=0})}else{var i=S.constituencies,o="高山原住民"==S.area?"山地原住民":S.area;e=$.grep(i,function(e){return e.county.indexOf(t)>=0&&e.district.indexOf(o)>=0})}$(".select-constituency  a").length>=10&&$(".select-constituency").slick("unslick"),$(".select-constituency").html("");for(var a in e){var c=Number(e[a].constituency)<10?"0"+e[a].constituency+"區":e[a].constituency+"區";e[a].district;$(".select-constituency").append('\n                <a href="'+prefixUrl_global+t+"/"+e[a].constituency+"/#"+S.area+'" data-id="'+e[a].constituency+'" data-info="'+e[a].district+'">'+c+"\n                </a>\n                  ")}h($(".select-constituency")),$(".select-constituency a").each(function(){$(this).off("hover").hover(function(){var t=$(this).data("id"),e=$(this).data("info");console.log("hover...."+t),$(".hover-info p").html(""+e),$(".hover-info").show()},function(){$(".hover-info").hide()})})}},{key:"anim",value:function(){var t=this;console.log("update View...");var e=0,n=30*Math.random(),i=Math.ceil(n);$(".content-list > .content-item ").each(function(){var t=(e+i)%30+1;$(this).addClass("bg-dark-group-color"+t),TweenMax.fromTo($(this),.7,{opacity:0,y:20},{delay:.5+.05*e,opacity:1,y:0,ease:Back.easeOut}),e++}),t.detailbind()}},{key:"detailbind",value:function(){function t(t,e){var n=t.height(),i=t.css("height","auto").height();t.height(n),t.stop().animate({height:i},e)}var e={};$(".content-item").each(function(){var n=$(this).data("id");$(this).find(".content-detail ").css("height",0),e[n]=0,$(this).find(".btn-detail").click(function(){var i=$(this).parent().parent().parent(),o=(i.data("id"),i.find(".content-detail"));0==e[n]?(t(o,500),e[n]=1):(o.animate({height:"0"},500),e[n]=0)})})}},{key:"watchScroll",value:function(){}},{key:"bindcounty",value:function(){var t=this;$(".select-county > a").off("click").click(function(){var e=$(this).data("id");console.log("id..."+e);var n=t.updateViewUiCounty(e);t.updateViewCounty(n),t.updateViewUiConstituency(0)})}},{key:"bind",value:function(){var t=this;$(".select-area a").off("click").click(function(){var e=$(this).data("id");""==e&&(e="六都");var n=S.geo[e].cities;t.updateViewUi(e),t.updateView(n,"city");var i=t.updateViewUiCounty(0);t.updateViewCounty(i),t.updateViewUiConstituency(0)})}}]),e}(x)),j=(window.opera?"CSS1Compat"==document.compatMode?$("html"):$("body"):$("html,body"),function(t){function e(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"county-mayer-area",n=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],i=arguments.length>2&&void 0!==arguments[2]&&arguments[2],o=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];m(this,e);var a=C(this,(e.__proto__||Object.getPrototypeOf(e)).call(this,t,n,i,o));a.TEST=!1,a.init(),a.watchScroll();var c=a.chkIgContainsHash();return a.datafetch(c),a}return k(e,t),b(e,[{key:"init",value:function(){w(e.prototype.__proto__||Object.getPrototypeOf(e.prototype),"init",this).call(this)}},{key:"chkIgContainsHash",value:function(){var t=location.href,e=$.param.fragment(t);return e&&console.log("hash "+e),decodeURIComponent(e)}},{key:"datafetch",value:function(){function t(t){S.geo[t]={cities:[]};var n=S.constituencies,i=$.grep(n,function(e){return"高山原住民"==t?e.district.indexOf("山地原住民")>=0:e.district.indexOf(t)>=0}),o=_.groupBy(i,function(t){return t.county});for(var a in o){console.log("norepeatcts ..."+a);var c=e(a);S.geo[t].cities.push({cne:a,eng:c})}}function e(t){var e=S.allcities;return $.grep(e,function(e){return e.cne.indexOf(t)>=0})[0].eng}var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"六都",i=(arguments.length>1&&void 0!==arguments[1]&&arguments[1],this);$.get(jsonUrl_global,function(e){if(e){S.constituencies=e,t("高山原住民"),t("平地原住民"),t("不分區"),t("僑民"),""==n&&(n="六都");var o=S.geo[n].cities;i.updateViewUi(n),i.updateView(o,"city")}else alert("出現錯誤，請稍後再試！")},"json")}},{key:"updateViewUi",value:function(t){$(".select-area > a").each(function(){$(this).data("id")==t?$(this).addClass("act"):$(this).removeClass("act")})}},{key:"updateView",value:function(t,e){var n=this;$(".select-county-blk").html("");var i=n.chkIgContainsHash();if("city"==e)for(var o in t)$(".select-county-blk").append('\n                  <div class="col-xs-6 col-sm-3"><a class="info" href="'+prefixUrl_global+t[o].cne+"/#"+i+'">\n                  <p>'+t[o].cne+'</p>\n                  <p class="eng">'+t[o].eng+"</p></a>\n                  </div>\n                  ");else for(var a in t)$(".select-county-blk").append('\n                  <div class="col-xs-6 col-sm-3">\n                  <a class="info councilmen-area" href="'+prefixUrl_global+t[a].cne+"/#"+i+'">\n                  <p></p>\n                  <p class="eng">01</p>\n                  <div class="area-info">桃源區、那瑪夏區、甲\n                    仙區、六龜區、杉林區\n                    、內門區、旗山區、美\n                    濃區、茂林區 </div>\n                  </a>\n                  \n                  </div>\n                  ');n.anim()}},{key:"anim",value:function(){console.log("update View...");var t=0,e=30*Math.random(),n=Math.ceil(e);$(".select-county-blk > div ").each(function(){var e=(t+n)%30+1;$(this).find(".info").addClass("bg-light-group-color"+e),TweenMax.fromTo($(this),.7,{opacity:0,y:20},{delay:.5+.05*t,opacity:1,y:0,ease:Back.easeOut}),t++})}},{key:"watchScroll",value:function(){}},{key:"bind",value:function(){var t=this;$(".select-area > a").click(function(){var e=$(this).data("id");t.datafetch(e)})}}]),e}(x)),N=(window.opera?"CSS1Compat"==document.compatMode?$("html"):$("body"):$("html,body"),function(t){function e(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"councilmen county",n=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],i=arguments.length>2&&void 0!==arguments[2]&&arguments[2],o=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];m(this,e);var a=C(this,(e.__proto__||Object.getPrototypeOf(e)).call(this,t,n,i,o));a.TEST=!1,a.init(),a.watchScroll();var c=a.chkIgContainsHash();return a.datafetch(c),a}return k(e,t),b(e,[{key:"init",value:function(){w(e.prototype.__proto__||Object.getPrototypeOf(e.prototype),"init",this).call(this)}},{key:"chkIgContainsHash",value:function(){var t=location.href,e=$.param.fragment(t);return e&&console.log("hash "+e),decodeURIComponent(e)}},{key:"datafetch",value:function(t,e){function n(t){S.geo[t]={cities:[]};var e=S.constituencies,n=$.grep(e,function(e){return"高山原住民"==t?e.district.indexOf("山地原住民")>=0:e.district.indexOf(t)>=0}),o=_.groupBy(n,function(t){return t.county});for(var a in o){console.log("norepeatcts ..."+a);var c=i(a);S.geo[t].cities.push({cne:a,eng:c})}}function i(t){var e=S.allcities;return $.grep(e,function(e){return e.cne.indexOf(t)>=0})[0].eng}var o=this;!function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"六都";arguments.length>1&&void 0!==arguments[1]&&arguments[1],$.get(jsonUrl_global,function(e){if(e){S.constituencies=e,n("高山原住民"),n("平地原住民"),console.log("area..."+t),console.log("GLOBAL.county..."+S.county),""==t&&(t="六都");var i=S.geo[t].cities;o.updateViewUi(t),o.updateView(i,"city");var a=o.updateViewUiCounty(county_global);o.updateViewCounty(a)}else alert("出現錯誤，請稍後再試！")},"json")}(t,e)}},{key:"updateViewUi",value:function(t){$(".select-area > a").each(function(){$(this).data("id")==t?$(this).addClass("act"):$(this).removeClass("act")}),S.area=t}},{key:"updateViewUiCounty",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;return 0==t&&(t=$(".select-county a:first").data("id")),S.county=t,$(".select-county a").each(function(){$(this).data("id")==t?$(this).addClass("act"):$(this).removeClass("act")}),t}},{key:"updateView",value:function(t,e){var n=this;$(".select-county  a").length>=10&&$(".select-county").slick("unslick"),$(".select-county").html("");for(var i in t)$(".select-county").append('\n             <a href="'+prefixUrl_global+"#"+S.area+'" data-id="'+t[i].cne+'">'+t[i].cne+"</a>\n              ");n.bindcounty(),$(".select-county  a").length>=10&&$(".select-county").slick({dots:!1,infinite:!1,speed:700,slidesToShow:10,slidesToScroll:1,responsive:[{breakpoint:1e3,settings:{slidesToShow:6,slidesToScroll:1,infinite:!1}},{breakpoint:567,settings:{slidesToShow:3,slidesToScroll:3,infinite:!1}}]})}},{key:"updateViewCounty",value:function(t){return}},{key:"anim",value:function(){console.log("update View...");var t=0,e=30*Math.random(),n=Math.ceil(e);$(".select-county-blk > div ").each(function(){var e=(t+n)%30+1;$(this).find(".info").addClass("bg-light-group-color"+e),TweenMax.fromTo($(this),.7,{opacity:0,y:20},{delay:.5+.05*t,opacity:1,y:0,ease:Back.easeOut}),t++})}},{key:"watchScroll",value:function(){}},{key:"bindcounty",value:function(){var t=this;$(".select-county > a").off("click").click(function(){var e=$(this).data("id");console.log("id..."+e);var n=t.updateViewUiCounty(e);t.updateViewCounty(n)})}},{key:"bind",value:function(){var t=this;$(".select-area a").click(function(){var e=$(this).data("id");""==e&&(e="六都");var n=S.geo[e].cities;t.updateViewUi(e),t.updateView(n,"city");var i=t.updateViewUiCounty(0);t.updateViewCounty(i)})}}]),e}(x)),B=function(){function t(e){m(this,t),console.log("Arrows class contrusct..."),this._dom=e,this._Total=this._dom.find(".pg").length,this._curr=this._dom.find(".pg.act").data("id"),void 0===this._curr&&(this._curr=1),this.NumPerPage=10,this.chkPages=this.chkPages.bind(this),this.updateUIView=this.updateUIView.bind(this),this.updateView=this.updateView.bind(this),this.on=this.on.bind(this),this.init=this.init.bind(this),this.init()}return b(t,[{key:"init",value:function(){this.chkPages(),this.updateUIView(),this.updateView(),this.on()}},{key:"chkPages",value:function(){this.pgs=Math.ceil(this._curr/this.NumPerPage),this.maxPgs=Math.ceil(this._Total/this.NumPerPage),this.minpg=(this.pgs-1)*this.NumPerPage,this.maxpg=this.pgs*this.NumPerPage}},{key:"updateUIView",value:function(){this._dom.find(".pg"+this._curr).addClass("act"),this._dom.find(".btnNext,.btnPrev").show(),(this.pgs>=this.maxPgs||0==this.maxPgs)&&this._dom.find(".btnNext").hide(),this.pgs<=1&&this._dom.find(".btnPrev").hide()}},{key:"updateView",value:function(){this.removePage(this.minpg,this.maxpg),this.addPage(this.minpg,this.maxpg)}},{key:"hidePage",value:function(){}},{key:"addPage",value:function(t,e){for(var n=0,i=1;i<=this._Total;i++)i>t&&i<=e&&(this._dom.find(".pg"+i).css("opacity",0).show(),TweenMax.fromTo(this._dom.find(".pg"+i),.2,{y:5},{delay:.05*n,y:0,opacity:1}),n++)}},{key:"removePage",value:function(t,e){for(var n=1;n<=this._Total;n++)(n<=t||n>e)&&this._dom.find(".pg"+n).hide()}},{key:"on",value:function(){function t(){e.chkPages(),e.updateUIView(),e.updateView()}var e=this;this._dom.find(".btnNext").click(function(){e._curr=e.pgs*e.NumPerPage+1,t()}),this._dom.find(".btnPrev").click(function(){e._curr=(e.pgs-2)*e.NumPerPage+1,t()})}}]),t}(),A=(window.opera?"CSS1Compat"==document.compatMode?$("html"):$("body"):$("html,body"),function(t){function e(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"councilmen",n=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],i=arguments.length>2&&void 0!==arguments[2]&&arguments[2],o=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];m(this,e);var a=C(this,(e.__proto__||Object.getPrototypeOf(e)).call(this,t,n,i,o));a.TEST=!1,a.init(),a.watchScroll();var c=a.chkIgContainsHash();return a.datafetch(c),a}return k(e,t),b(e,[{key:"init",value:function(){w(e.prototype.__proto__||Object.getPrototypeOf(e.prototype),"init",this).call(this),new v,new B($(".pagemanager"))}},{key:"chkIgContainsHash",value:function(){var t=location.href,e=$.param.fragment(t);return e&&console.log("hash "+e),decodeURIComponent(e)}},{key:"datafetch",value:function(t,e){function n(t){S.geo[t]={cities:[]};var e=S.constituencies,n=$.grep(e,function(e){return"高山原住民"==t?e.district.indexOf("山地原住民")>=0:e.district.indexOf(t)>=0}),o=_.groupBy(n,function(t){return t.county});for(var a in o){console.log("norepeatcts ..."+a);var c=i(a);S.geo[t].cities.push({cne:a,eng:c})}}function i(t){var e=S.allcities;return $.grep(e,function(e){return e.cne.indexOf(t)>=0})[0].eng}var o=this;!function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"六都";arguments.length>1&&void 0!==arguments[1]&&arguments[1],$.get(jsonUrl_global,function(e){if(e){S.constituencies=e,n("高山原住民"),n("平地原住民"),console.log("area..."+t),console.log("GLOBAL.county..."+S.county),""==t&&(t="六都");var i=S.geo[t].cities;o.updateViewUi(t),o.updateView(i,"city");var a=o.updateViewUiCounty(county_global);o.updateViewCounty(a),o.updateViewUiConstituency(constituency_global)}else alert("出現錯誤，請稍後再試！")},"json")}(t,e)}},{key:"updateViewUi",value:function(t){$(".select-area > a").each(function(){$(this).data("id")==t?$(this).addClass("act"):$(this).removeClass("act")}),S.area=t}},{key:"updateViewUiCounty",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;return 0==t&&(t=$(".select-county a:first").data("id")),S.county=t,$(".select-county a").each(function(){$(this).data("id")==t?$(this).addClass("act"):$(this).removeClass("act")}),t}},{key:"updateViewUiConstituency",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;0==t&&(t=$(".select-constituency a:first").data("id")),S.constituency=t,$(".select-constituency a").each(function(){$(this).data("id")==t?$(this).addClass("act"):$(this).removeClass("act")}),this.anim()}},{key:"updateView",value:function(t,e){var n=this;$(".select-county  a").length>=10&&$(".select-county").slick("unslick"),$(".select-county").html("");for(var i in t)$(".select-county").append('\n             <a href="'+prefixUrl_global+t[i].cne+"/#"+S.area+'" data-id="'+t[i].cne+'">'+t[i].cne+"</a>\n              \n              ");n.bindcounty(),p($(".select-county"))}},{key:"updateViewCounty",value:function(t){return}},{key:"anim",value:function(){var t=this;console.log("update View...");var e=0,n=30*Math.random(),i=Math.ceil(n);$(".content-list > .content-item ").each(function(){var t=(e+i)%30+1;console.log("add color..."),$(this).addClass("bg-dark-group-color"+t),TweenMax.fromTo($(this),.7,{opacity:0,y:20},{delay:.5+.05*e,opacity:1,y:0,ease:Back.easeOut}),e++}),t.detailbind()}},{key:"detailbind",value:function(){function t(t,e){var n=t.height(),i=t.css("height","auto").height();t.height(n),t.stop().animate({height:i},e)}var e={};$(".content-item").each(function(){var n=$(this).data("id");$(this).find(".content-detail ").css("height",0),e[n]=0,$(this).find(".btn-detail").click(function(){
var i=$(this).parent().parent().parent(),o=(i.data("id"),i.find(".content-detail"));0==e[n]?(t(o,500),e[n]=1):(o.animate({height:"0"},500),e[n]=0)})})}},{key:"watchScroll",value:function(){}},{key:"bindcounty",value:function(){var t=this;$(".select-county > a").off("click").click(function(){var e=$(this).data("id");console.log("id..."+e);var n=t.updateViewUiCounty(e);t.updateViewCounty(n),t.updateViewUiConstituency(0)})}},{key:"bind",value:function(){var t=this,e=void 0;$(".select-area a").off("click").click(function(){var e=$(this).data("id");""==e&&(e="六都");var n=S.geo[e].cities;t.updateViewUi(e),t.updateView(n,"city");var i=t.updateViewUiCounty(0);t.updateViewCounty(i),t.updateViewUiConstituency(0)}),$(".filters > .f-item").each(function(){if($(this).hasClass("act")){var t=$(this).data("id");console.log("filters act id ..."+t),e=t}$(this).click(function(){var t=$(this).data("id");$(".filters > .f-item").removeClass("act"),t!=e&&(e=t,$(this).addClass("act"))})})}}]),e}(x)),L=(window.opera?"CSS1Compat"==document.compatMode?$("html"):$("body"):$("html,body"),function(t){function e(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"ballot",n=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],i=arguments.length>2&&void 0!==arguments[2]&&arguments[2],o=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];m(this,e);var a=C(this,(e.__proto__||Object.getPrototypeOf(e)).call(this,t,n,i,o));return a.TEST=!1,a.init(),a.watchScroll(),a}return k(e,t),b(e,[{key:"init",value:function(){w(e.prototype.__proto__||Object.getPrototypeOf(e.prototype),"init",this).call(this),this.anim(),new B($(".pagemanager"))}},{key:"anim",value:function(){console.log("update View...");var t=0,e=30*Math.random(),n=Math.ceil(e);$(".content-list > .content-item ").each(function(){var e=(t+n)%30+1;console.log("add color..."),$(this).addClass("bg-dark-group-color"+e),TweenMax.fromTo($(this),.7,{opacity:0,y:20},{delay:.5+.05*t,opacity:1,y:0,ease:Back.easeOut}),t++})}},{key:"watchScroll",value:function(){}},{key:"bind",value:function(){var t=void 0;console.log("binding..........."),$(".filters > .f-item").each(function(){if($(this).hasClass("act")){var e=$(this).data("id");console.log("filters act id ..."+e),t=e}$(this).click(function(){var e=$(this).data("id");$(".filters > .f-item").removeClass("act"),e!=t&&(t=e,$(this).addClass("act"))})})}}]),e}(x)),F=(window.opera?"CSS1Compat"==document.compatMode?$("html"):$("body"):$("html,body"),function(t){function e(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"wish list",n=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],i=arguments.length>2&&void 0!==arguments[2]&&arguments[2],o=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];m(this,e);var a=C(this,(e.__proto__||Object.getPrototypeOf(e)).call(this,t,n,i,o));return a.TEST=!1,a.init(),a.watchScroll(),a}return k(e,t),b(e,[{key:"init",value:function(){w(e.prototype.__proto__||Object.getPrototypeOf(e.prototype),"init",this).call(this),this.anim()}},{key:"anim",value:function(){console.log("update View...");var t=0,e=30*Math.random(),n=Math.ceil(e);$(".content-list > .content-item ").each(function(){var e=(t+n)%30+1;console.log("add color..."),$(this).addClass("bg-dark-group-color"+e),TweenMax.fromTo($(this),.7,{opacity:0,y:20},{delay:.5+.05*t,opacity:1,y:0,ease:Back.easeOut}),t++})}},{key:"watchScroll",value:function(){}},{key:"bind",value:function(){var t=void 0;console.log("binding..........."),$(".filters > .f-item").each(function(){if($(this).hasClass("act")){var e=$(this).data("id");console.log("filters act id ..."+e),t=e}$(this).click(function(){var e=$(this).data("id");$(".filters > .f-item").removeClass("act"),e!=t&&(t=e,$(this).addClass("act"))})}),$(".select-county-blk > div ").hover(function(){TweenMax.to($(this).find(".hover-info"),.3,{opacity:1})},function(){TweenMax.to($(this).find(".hover-info"),.3,{opacity:0})})}}]),e}(x)),Y=(window.opera?"CSS1Compat"==document.compatMode?$("html"):$("body"):$("html,body"),function(t){function e(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"wish",n=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],i=arguments.length>2&&void 0!==arguments[2]&&arguments[2],o=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];m(this,e);var a=C(this,(e.__proto__||Object.getPrototypeOf(e)).call(this,t,n,i,o));return a.TEST=!1,a.init(),a.watchScroll(),new B($(".pagemanager")),a}return k(e,t),b(e,[{key:"init",value:function(){w(e.prototype.__proto__||Object.getPrototypeOf(e.prototype),"init",this).call(this),this.anim()}},{key:"anim",value:function(){console.log("update View...");var t=0,e=30*Math.random(),n=Math.ceil(e);$(".content-list > .content-item ").each(function(){var e=(t+n)%30+1;console.log("add color..."),$(this).find(".bg").addClass("bg-dark-group-color"+e),TweenMax.fromTo($(this),.7,{opacity:0,y:20},{delay:.5+.05*t,opacity:1,y:0,ease:Back.easeOut}),t++})}},{key:"watchScroll",value:function(){}},{key:"bind",value:function(){var t=void 0;console.log("binding..........."),$(".filters > .f-item").each(function(){if($(this).hasClass("act")){var e=$(this).data("id");console.log("filters act id ..."+e),t=e}$(this).click(function(){var e=$(this).data("id");$(".filters > .f-item").removeClass("act"),e!=t&&(t=e,$(this).addClass("act"))})})}}]),e}(x)),R=(window.opera?"CSS1Compat"==document.compatMode?$("html"):$("body"):$("html,body"),function(t){function e(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"wish editor",n=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],i=arguments.length>2&&void 0!==arguments[2]&&arguments[2],o=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];m(this,e);var a=C(this,(e.__proto__||Object.getPrototypeOf(e)).call(this,t,n,i,o));return a.TEST=!1,a.init(),a.watchScroll(),a}return k(e,t),b(e,[{key:"init",value:function(){w(e.prototype.__proto__||Object.getPrototypeOf(e.prototype),"init",this).call(this),simplemde=new SimpleMDE({element:document.getElementById("simplemde")})}},{key:"anim",value:function(){}},{key:"watchScroll",value:function(){}},{key:"bind",value:function(){}}]),e}(x)),W=(window.opera?"CSS1Compat"==document.compatMode?$("html"):$("body"):$("html,body"),function(t){function e(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"seemore",n=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],i=arguments.length>2&&void 0!==arguments[2]&&arguments[2],o=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];m(this,e);var a=C(this,(e.__proto__||Object.getPrototypeOf(e)).call(this,t,n,i,o));a.TEST=!1,a.init(),a.watchScroll();a.chkIgContainsHash();return a}return k(e,t),b(e,[{key:"init",value:function(){w(e.prototype.__proto__||Object.getPrototypeOf(e.prototype),"init",this).call(this),this.anim()}},{key:"chkIgContainsHash",value:function(){var t=location.href,e=$.param.fragment(t);return e&&console.log("hash "+e),decodeURIComponent(e)}},{key:"datafetch",value:function(){function t(t){S.geo[t]={cities:[]};var n=S.constituencies,i=$.grep(n,function(e){return"高山原住民"==t?e.district.indexOf("山地原住民")>=0:e.district.indexOf(t)>=0}),o=_.groupBy(i,function(t){return t.county});for(var a in o){console.log("norepeatcts ..."+a);var c=e(a);S.geo[t].cities.push({cne:a,eng:c})}}function e(t){var e=S.allcities;return $.grep(e,function(e){return e.cne.indexOf(t)>=0})[0].eng}var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"六都",i=(arguments.length>1&&void 0!==arguments[1]&&arguments[1],this);year_global&&year_global,$.get(jsonUrl_global,function(e){if(e){S.constituencies=e,t("高山原住民"),t("平地原住民"),""==n&&(n="六都");var o=S.geo[n].cities;i.updateViewUi(n),i.updateView(o,"city")}else alert("出現錯誤，請稍後再試！")},"json")}},{key:"updateViewUi",value:function(t){$(".select-area > a").each(function(){$(this).data("id")==t?$(this).addClass("act"):$(this).removeClass("act")})}},{key:"updateView",value:function(t,e){var n=this;if($(".select-county-blk").html(""),"city"==e)for(var i in t)$(".select-county-blk").append('\n                  <div class="col-xs-6 col-sm-3"><a class="info" href="/candidates/councilors/'+t[i].cne+'">\n                  <p>'+t[i].cne+'</p>\n                  <p class="eng">'+t[i].eng+"</p></a>\n                  </div>\n                  ");else for(var o in t)$(".select-county-blk").append('\n                  <div class="col-xs-6 col-sm-3">\n                  <a class="info councilmen-area" href="/candidates/councilors/'+t[o].cne+'">\n                  <p></p>\n                  <p class="eng">01</p>\n                  <div class="area-info">桃源區、那瑪夏區、甲\n                    仙區、六龜區、杉林區\n                    、內門區、旗山區、美\n                    濃區、茂林區 </div>\n                  </a>\n                  \n                  </div>\n                  ');n.anim()}},{key:"anim",value:function(){console.log("update View...");var t=0,e=30*Math.random(),n=Math.ceil(e);$(".select-county-blk > div ").each(function(){var e=(t+n)%30+1;$(this).find(".info").addClass("bg-light-group-color"+e),TweenMax.fromTo($(this),.7,{opacity:0,y:20},{delay:.5+.05*t,opacity:1,y:0,ease:Back.easeOut}),t++})}},{key:"watchScroll",value:function(){}},{key:"bind",value:function(){$(".select-county-blk > div ").hover(function(){TweenMax.to($(this).find(".hover-info"),.3,{opacity:1})},function(){TweenMax.to($(this).find(".hover-info"),.3,{opacity:0})})}}]),e}(x)),D=(window.opera?"CSS1Compat"==document.compatMode?$("html"):$("body"):$("html,body"),function(t){function e(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"see more detail",n=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],i=arguments.length>2&&void 0!==arguments[2]&&arguments[2],o=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];m(this,e);var a=C(this,(e.__proto__||Object.getPrototypeOf(e)).call(this,t,n,i,o));return a.TEST=!1,a.init(),a.watchScroll(),a}return k(e,t),b(e,[{key:"init",value:function(){w(e.prototype.__proto__||Object.getPrototypeOf(e.prototype),"init",this).call(this),$(".select-opt2").slick({dots:!1,infinite:!1,speed:700,slidesToShow:4,slidesToScroll:1,responsive:[{breakpoint:1e3,settings:{slidesToShow:3,slidesToScroll:1,infinite:!1}},{breakpoint:567,settings:{slidesToShow:2,slidesToScroll:3,infinite:!1}}]})}},{key:"watchScroll",value:function(){}},{key:"bind",value:function(){}}]),e}(x)),X={};X.start=new y}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
